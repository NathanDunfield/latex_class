% Setting up theorems, figures, etc. Note: tried to get cleveref to work,
% but proved too flaky to be worth it.  
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{nmd/thm}[2014/08/31 - Semester start edition]
\RequirePackage{nmd/common}
\RequirePackage{thmtools}
\RequirePackage{thm-restate}
\newboolean{nmd@numfigswithrest}  \nmd@numfigswithresttrue
\newboolean{nmd@usealphaenums}    \nmd@usealphaenumstrue
\DeclareOption{sepfignums}{\nmd@numfigswithrestfalse}
\DeclareOption{defaultenums}{\nmd@usealphaenumsfalse}
\ProcessOptions



% define needed keyval key if necessary
\ifthen{\isundefined{\KV@thmdef@nmd}}%
   {\define@key{thmdef}{nmd}[{}]{}}

% Theorem number should be first!  
\swapnumbers

% In AMS article, let's use slanted instead of italics in theorems
\@ifclassloaded{amsart}
   {\newtheoremstyle{plain}{}{}{\slshape}{}{\bfseries}{.}{0.5em}{}}
   {}
  
\newcommand{\nmdnewtheorem}[1]{%
  \declaretheorem[nmd, style=plain, sibling=subsection]{#1}}

\nmdnewtheorem{theorem}
\nmdnewtheorem{conjecture}
\nmdnewtheorem{lemma}
\nmdnewtheorem{corollary}
\nmdnewtheorem{proposition}
\nmdnewtheorem{claim}
\nmdnewtheorem{question}
\nmdnewtheorem{goal}
\nmdnewtheorem{criterion}
\nmdnewtheorem{project}

\declaretheorem[style=definition, sibling=subsection]{definition}
\declaretheorem[style=definition, sibling=subsection]{notation}
\declaretheorem[style=remark, sibling=subsection]{remark}
\declaretheorem[style=remark, sibling=subsection]{example}

% Change enum to use letters, so there's no confusion 
% with equation labels.  I'm not really happy with this. 

\ifnmd@usealphaenums
  \renewcommand{\labelenumi}{(\alph{enumi}) }
  \renewcommand{\theenumi}{\alph{enumi}}
\else
  \renewcommand{\labelenumi}{(\arabic{enumi}) }
  \renewcommand{\theenumi}{\arabic{enumi}}
\fi

% Figures and tables 
\RequirePackage{booktabs}
\RequirePackage[margin=15pt,font=small,labelfont=bf, labelsep=period]{caption} 
\RequirePackage[margin=15pt,font=small,labelfont=bf, labelsep=period]{subfig}

% Put figures, tables, and equations onto the common
% subsection/theorem counter. There ought to be a better 
% way to equate two counters than this, but...

\let\c@table=\c@subsection
\let\thetable=\thesubsection
\let\c@equation=\c@subsection
\let\theequation=\thesubsection
\ifnmd@numfigswithrest
  \let\c@figure=\c@subsection
  \let\thefigure=\thesubsection
\fi

% Ugly bug fix for thmtools restateable spacing issue.  See
% 
%      http://tex.stackexchange.com/questions/111639/
%
% For details.  

\renewenvironment{thmt@restatable}[3][]{%
  \thmt@toks{}% will hold body
  \stepcounter{thmt@dummyctr}% used for data storage label.
  \long\def\thmrst@store##1{%
    \@xa\gdef\csname #3\endcsname{%
      \@ifstar{%
        \thmt@thisistheonefalse\csname thmt@stored@#3\endcsname
      }{%
        \thmt@thisistheonetrue\csname thmt@stored@#3\endcsname
      }%
    }%
    \@xa\long\@xa\gdef\csname thmt@stored@#3\@xa\endcsname\@xa{%
      \begingroup
      \ifthmt@thisistheone
        % nothing here in my patched version
      \else
        % this one should use other numbers...
        % first, fake the theorem number.
        \@xa\protected@edef\csname the#2\endcsname{%
          \thmt@trivialref{thmt@@#3}{??}}%
        % if the number wasn't there, have a "re-run to get labels right"
        % warning.
        \ifcsname r@thmt@@#3\endcsname\else
          \G@refundefinedtrue
        \fi
        % prevent stepcountering the theorem number,
        % but still, have some number for hyperref, just in case.
        \@xa\let\csname c@#2\endcsname=\c@thmt@dummyctr
        \@xa\let\csname theH#2\endcsname=\theHthmt@dummyctr
        % disable labeling.
        \let\label=\@gobble
        \let\ltx@label=\@gobble% amsmath needs this
        % We shall need to restore the counters at the end
        % of the environment, so we get
        % (4.2) [(3.1 from restate)] (4.3)
        \def\thmt@restorecounters{}%
        \@for\thmt@ctr:=\thmt@innercounters\do{%
          \protected@edef\thmt@restorecounters{%
            \thmt@restorecounters
            \protect\setcounter{\thmt@ctr}{\arabic{\thmt@ctr}}%
          }%
        }%
        % pull the new semi-static definition of \theequation et al.
        % from the aux file.
        \thmt@trivialref{thmt@@#3@data}{}%
      \fi
      % call the proper begin-env code, possibly with optional argument
      % (omit if stored via key-val)
      \ifthmt@restatethis
        \thmt@restatethisfalse
      \else
        \csname #2\@xa\endcsname\ifx\@nx#1\@nx\else[{#1}]\fi
      \fi
      \ifthmt@thisistheone
         % these are the valid numbers, store them for the other
         % occasions.
         \thmt@rst@storecounters{#3}%
        % store a label so we can pick up the number later.
        \label{thmt@@#3}%
      \fi
      % this will be the collected body.
      ##1%
      \csname end#2\endcsname
      % if we faked the counter values, restore originals now.
      \ifthmt@thisistheone\else\thmt@restorecounters\fi
      \endgroup
    }% thmt@stored@#3
    % in either case, now call the just-created macro,
    \csname #3\@xa\endcsname\ifthmt@thisistheone\else*\fi
    % and artificially close the current environment.
    \@xa\end\@xa{\@currenvir}
  }% thm@rst@store
  \thmt@collect@body\thmrst@store
}{%
  %% now empty, just used as a marker.
}